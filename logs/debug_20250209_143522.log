2025-02-09 14:35:22.456 | 40212:55156 | INFO     | __main__:main:853 | Main: Initializing research agent
2025-02-09 14:35:22.461 | 40212:55156 | INFO     | scripts.llm_compiler:__init__:79 | Compiler: Initialized LLM compiler
2025-02-09 14:35:23.372 | 40212:55156 | INFO     | scripts.llm_compiler:__init__:79 | Compiler: Initialized LLM compiler
2025-02-09 14:35:23.976 | 40212:55156 | INFO     | scripts.knowledge_acquisition:__init__:279 | KnowledgeAcquisition: Knowledge acquisition system initialized
2025-02-09 14:35:23.978 | 40212:55156 | INFO     | scripts.knowledge_acquisition:__init__:279 | 
Local Variables:
  self = <scripts.knowledge_acquisition.KnowledgeAcquisitionSystem object at 0x00000201E62D2510>
  config = domains=[DomainConfig(name='medical', description='Medical domain knowledge including diseases, treatments, and healthcare concepts', classes=[OntologyClass(name='Disease', description='A medical cond...
  api_key = AIzaSyA_5-fcCihRyNZvfl6S5wm420SnuvijQT0
  llm = model='gemini-2.0-flash' temperature=0.7 api_key=SecretStr('**********') format='json' schema={'description': 'Schema for entity extraction response', 'properties': {'entities': {'description': 'List ...
  __class__ = <class 'scripts.knowledge_acquisition.KnowledgeAcquisitionSystem'>

2025-02-09 14:35:23.981 | 40212:55156 | INFO     | scripts.llm_compiler:__init__:79 | Compiler: Initialized LLM compiler
2025-02-09 14:35:23.983 | 40212:55156 | INFO     | scripts.llm_compiler:__init__:79 | Compiler: Initialized LLM compiler
2025-02-09 14:35:23.988 | 40212:55156 | INFO     | scripts.llm_compiler:register_tool:89 | Compiler: Registered tool: _research_topics
2025-02-09 14:35:23.990 | 40212:55156 | INFO     | scripts.llm_compiler:register_tool:89 | Compiler: Registered tool: _synthesize_knowledge
2025-02-09 14:35:23.992 | 40212:55156 | INFO     | scripts.llm_compiler:register_tool:89 | Compiler: Registered tool: _generate_examples
2025-02-09 14:35:23.993 | 40212:55156 | INFO     | scripts.llm_compiler:register_tool:89 | Compiler: Registered tool: _train_model
2025-02-09 14:35:23.995 | 40212:55156 | INFO     | __main__:__init__:206 | Research: Research agent initialized
2025-02-09 14:35:23.997 | 40212:55156 | INFO     | __main__:main:856 | Main: Starting research agent
2025-02-09 14:35:23.999 | 40212:55156 | INFO     | __main__:run:608 | Research: Starting research workflow for domain: test_domain
2025-02-09 14:35:24.001 | 40212:55156 | INFO     | __main__:run:643 | Execution: Starting execution of 4 tasks
2025-02-09 14:35:24.002 | 40212:55156 | INFO     | __main__:run:657 | Execution: Executing task 0: _research_topics
2025-02-09 14:35:24.003 | 40212:55156 | INFO     | __main__:_research_topics:229 | Research: Starting topic research for domain: test_domain
2025-02-09 14:35:24.005 | 40212:55156 | INFO     | scripts.knowledge_acquisition:initialize:288 | KnowledgeAcquisition: Starting system initialization
2025-02-09 14:35:24.736 | 40212:55156 | INFO     | scripts.knowledge_acquisition:initialize:297 | KnowledgeAcquisition: Embeddings initialized
2025-02-09 14:35:24.978 | 40212:55156 | INFO     | scripts.knowledge_acquisition:initialize:310 | KnowledgeAcquisition: Vector store initialized
2025-02-09 14:35:25.062 | 40212:55156 | INFO     | scripts.knowledge_acquisition:initialize:323 | KnowledgeAcquisition: Graph database initialized
2025-02-09 14:35:25.065 | 40212:55156 | INFO     | __main__:_research_topics:247 | Search: Searching for: test_domain overview
2025-02-09 14:35:30.451 | 40212:55156 | INFO     | __main__:_research_topics:247 | Search: Searching for: test_domain key concepts
2025-02-09 14:35:38.764 | 40212:55156 | INFO     | __main__:_research_topics:247 | Search: Searching for: test_domain latest developments
2025-02-09 14:35:45.949 | 40212:55156 | INFO     | __main__:_research_topics:247 | Search: Searching for: test_domain research papers
2025-02-09 14:35:58.915 | 40212:55156 | INFO     | __main__:run:657 | Execution: Executing task 1: _synthesize_knowledge
2025-02-09 14:35:58.917 | 40212:55156 | INFO     | __main__:run:668 | Execution: Found 10 sources for synthesis
2025-02-09 14:35:58.920 | 40212:55156 | INFO     | __main__:_synthesize_knowledge:325 | Knowledge Synthesis: Processing source: Free Website Authority Checker (Enter Any Domain or URL) (source_1.txt)
2025-02-09 14:35:58.922 | 40212:55156 | INFO     | __main__:_synthesize_knowledge:329 | Knowledge Synthesis: Content preview:
* ArticlesArticles + Popular + SEO Fundamentals + Content Marketing + Link Building + Marketing + What Is SEO?For people that are new to + SEO ChecklistCovers technical SEO, On-page SEO, and keyword re + [SEO Audit Checklist18-step guide to get higher Google rankings.Step-by-step guide to building a website in 2024.( * ToolsTools + Free Tools + Tool Guides + Tool Reviews + Keyword Re + Backlink CheckerDiscover who’s linking to you and your competitors.Step-by-step guide to building a website in ...
2025-02-09 14:35:58.924 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:445 | KnowledgeAcquisition: Starting source processing with content length: 12294
2025-02-09 14:35:58.926 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:449 | KnowledgeAcquisition: Content preview:
* ArticlesArticles + Popular + SEO Fundamentals + Content Marketing + Link Building + Marketing + What Is SEO?For people that are new to + SEO ChecklistCovers technical SEO, On-page SEO, and keyword r...
2025-02-09 14:35:58.928 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:452 | KnowledgeAcquisition: Extracting entities...
2025-02-09 14:35:59.079 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_extract_entities:646 | Failed to extract entities: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 454, in process_source
    entities = await self._extract_entities(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 621, in _extract_entities
    result = await chain.ainvoke({"content": content})  # Note: changed text to content to match prompt

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:35:59.187 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:459 | KnowledgeAcquisition: Extracted 1 entities: ['general_concept']
2025-02-09 14:35:59.189 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:465 | KnowledgeAcquisition: Extracting relationships...
2025-02-09 14:35:59.235 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_extract_relationships:658 | Failed to extract relationships: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 467, in process_source
    relationships = await self._extract_relationships(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 655, in _extract_relationships
    result = await chain.ainvoke({"content": content})

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:35:59.298 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:479 | KnowledgeAcquisition: Extracted 0 relationships
2025-02-09 14:35:59.300 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:487 | KnowledgeAcquisition: Generating metadata...
2025-02-09 14:35:59.350 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_generate_metadata:669 | Failed to generate metadata: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 489, in process_source
    metadata = await self._generate_metadata(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 666, in _generate_metadata
    result = await chain.ainvoke({"text": content})

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:35:59.418 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:500 | KnowledgeAcquisition: Evaluating confidence...
2025-02-09 14:35:59.472 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_evaluate_confidence:734 | Failed to evaluate confidence: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 502, in process_source
    confidence_eval = await self._evaluate_confidence(content, entities, relationships)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 723, in _evaluate_confidence
    result = await chain.ainvoke({

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:35:59.539 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:510 | KnowledgeAcquisition: Confidence score: 0.5
2025-02-09 14:35:59.550 | 40212:55156 | INFO     | __main__:_synthesize_knowledge:325 | Knowledge Synthesis: Processing source: Website Authority Checker | Check Authority Score of Any ... (source_11.txt)
2025-02-09 14:35:59.552 | 40212:55156 | INFO     | __main__:_synthesize_knowledge:329 | Knowledge Synthesis: Content preview:
Skip to content * Features * Svenska * Tiếng Việt * Türkçe * 中文 * 日本語 * 한국어 Log In is a measurement used to evaluate a domain’s overall quality and SEO performance. For example, Semrush’s Authority Score is a compound metric that’s calculated based on the website’s referring domains, backlinks, organic traffic, and other factors. This value is expressed on a scale from 0 to 100. The higher the number, the stronger and more authoritative the website is. And the likelier it is to rank well in Goog...
2025-02-09 14:35:59.554 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:445 | KnowledgeAcquisition: Starting source processing with content length: 1691
2025-02-09 14:35:59.556 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:449 | KnowledgeAcquisition: Content preview:
Skip to content * Features * Svenska * Tiếng Việt * Türkçe * 中文 * 日本語 * 한국어 Log In is a measurement used to evaluate a domain’s overall quality and SEO performance. For example, Semrush’s Authority Sc...
2025-02-09 14:35:59.557 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:452 | KnowledgeAcquisition: Extracting entities...
2025-02-09 14:35:59.608 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_extract_entities:646 | Failed to extract entities: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 454, in process_source
    entities = await self._extract_entities(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 621, in _extract_entities
    result = await chain.ainvoke({"content": content})  # Note: changed text to content to match prompt

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:35:59.699 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:459 | KnowledgeAcquisition: Extracted 1 entities: ['general_concept']
2025-02-09 14:35:59.701 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:465 | KnowledgeAcquisition: Extracting relationships...
2025-02-09 14:35:59.737 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_extract_relationships:658 | Failed to extract relationships: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 467, in process_source
    relationships = await self._extract_relationships(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 655, in _extract_relationships
    result = await chain.ainvoke({"content": content})

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:35:59.799 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:479 | KnowledgeAcquisition: Extracted 0 relationships
2025-02-09 14:35:59.801 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:487 | KnowledgeAcquisition: Generating metadata...
2025-02-09 14:35:59.840 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_generate_metadata:669 | Failed to generate metadata: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 489, in process_source
    metadata = await self._generate_metadata(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 666, in _generate_metadata
    result = await chain.ainvoke({"text": content})

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:35:59.903 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:500 | KnowledgeAcquisition: Evaluating confidence...
2025-02-09 14:35:59.951 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_evaluate_confidence:734 | Failed to evaluate confidence: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 502, in process_source
    confidence_eval = await self._evaluate_confidence(content, entities, relationships)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 723, in _evaluate_confidence
    result = await chain.ainvoke({

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:00.024 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:510 | KnowledgeAcquisition: Confidence score: 0.5
2025-02-09 14:36:00.034 | 40212:55156 | INFO     | __main__:_synthesize_knowledge:325 | Knowledge Synthesis: Processing source: Domains Overview : Support - Solutions (source_13.txt)
2025-02-09 14:36:00.036 | 40212:55156 | INFO     | __main__:_synthesize_knowledge:329 | Knowledge Synthesis: Content preview:
![Logo Solution home. At least one Domain must be set up within a Test Data Project to generate test data. Some examples of Domains for Projects are shown below: !( ## **In This Article** * Training Video * When Should Domains Be Used? * How Do Domains Work? * Can a Domain Reference Another Domain's Attributes? * Can the Domain loopCount Value be passed at Runtime? * How to View and Manage Domains * How do I create Domains? * Domains Example - Modeling a Database * Learn More About Domains ## **...
2025-02-09 14:36:00.038 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:445 | KnowledgeAcquisition: Starting source processing with content length: 3582
2025-02-09 14:36:00.039 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:449 | KnowledgeAcquisition: Content preview:
![Logo Solution home. At least one Domain must be set up within a Test Data Project to generate test data. Some examples of Domains for Projects are shown below: !( ## **In This Article** * Training V...
2025-02-09 14:36:00.042 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:452 | KnowledgeAcquisition: Extracting entities...
2025-02-09 14:36:00.083 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_extract_entities:646 | Failed to extract entities: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 454, in process_source
    entities = await self._extract_entities(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 621, in _extract_entities
    result = await chain.ainvoke({"content": content})  # Note: changed text to content to match prompt

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:00.143 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:459 | KnowledgeAcquisition: Extracted 1 entities: ['general_concept']
2025-02-09 14:36:00.145 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:465 | KnowledgeAcquisition: Extracting relationships...
2025-02-09 14:36:00.189 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_extract_relationships:658 | Failed to extract relationships: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 467, in process_source
    relationships = await self._extract_relationships(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 655, in _extract_relationships
    result = await chain.ainvoke({"content": content})

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:00.331 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:479 | KnowledgeAcquisition: Extracted 0 relationships
2025-02-09 14:36:00.334 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:487 | KnowledgeAcquisition: Generating metadata...
2025-02-09 14:36:00.378 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_generate_metadata:669 | Failed to generate metadata: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 489, in process_source
    metadata = await self._generate_metadata(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 666, in _generate_metadata
    result = await chain.ainvoke({"text": content})

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:00.489 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:500 | KnowledgeAcquisition: Evaluating confidence...
2025-02-09 14:36:00.533 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_evaluate_confidence:734 | Failed to evaluate confidence: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 502, in process_source
    confidence_eval = await self._evaluate_confidence(content, entities, relationships)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 723, in _evaluate_confidence
    result = await chain.ainvoke({

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:00.606 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:510 | KnowledgeAcquisition: Confidence score: 0.5
2025-02-09 14:36:00.616 | 40212:55156 | INFO     | __main__:_synthesize_knowledge:325 | Knowledge Synthesis: Processing source: Domain Testing - Introduction, Testing Strategy & conclusion (source_15.txt)
2025-02-09 14:36:00.618 | 40212:55156 | INFO     | __main__:_synthesize_knowledge:329 | Knowledge Synthesis: Content preview:
![QACraft for ease of testing. In other words, Domain testing is a **software testing TAGS : domain testing ## 01 Oct ![software testing ## 28 Jun ![software testing ## Recent Posts * Regression testing comes under which type of testing?( * Why is Regression Testing In Agile?( * Difference Between Selenium and Automation Testing( * Is Integration Testing White box Testing?( * How Many Types of Integration Testing Are There?( ## Categories * Agile Testing( * Agile Testing( * Android App Testing( ...
2025-02-09 14:36:00.620 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:445 | KnowledgeAcquisition: Starting source processing with content length: 2357
2025-02-09 14:36:00.622 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:449 | KnowledgeAcquisition: Content preview:
![QACraft for ease of testing. In other words, Domain testing is a **software testing TAGS : domain testing ## 01 Oct ![software testing ## 28 Jun ![software testing ## Recent Posts * Regression testi...
2025-02-09 14:36:00.624 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:452 | KnowledgeAcquisition: Extracting entities...
2025-02-09 14:36:00.662 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_extract_entities:646 | Failed to extract entities: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 454, in process_source
    entities = await self._extract_entities(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 621, in _extract_entities
    result = await chain.ainvoke({"content": content})  # Note: changed text to content to match prompt

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:00.723 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:459 | KnowledgeAcquisition: Extracted 1 entities: ['general_concept']
2025-02-09 14:36:00.725 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:465 | KnowledgeAcquisition: Extracting relationships...
2025-02-09 14:36:00.766 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_extract_relationships:658 | Failed to extract relationships: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 467, in process_source
    relationships = await self._extract_relationships(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 655, in _extract_relationships
    result = await chain.ainvoke({"content": content})

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:07.472 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:479 | KnowledgeAcquisition: Extracted 0 relationships
2025-02-09 14:36:07.475 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:487 | KnowledgeAcquisition: Generating metadata...
2025-02-09 14:36:07.539 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_generate_metadata:669 | Failed to generate metadata: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 489, in process_source
    metadata = await self._generate_metadata(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 666, in _generate_metadata
    result = await chain.ainvoke({"text": content})

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:07.622 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:500 | KnowledgeAcquisition: Evaluating confidence...
2025-02-09 14:36:07.674 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_evaluate_confidence:734 | Failed to evaluate confidence: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 502, in process_source
    confidence_eval = await self._evaluate_confidence(content, entities, relationships)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 723, in _evaluate_confidence
    result = await chain.ainvoke({

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:07.758 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:510 | KnowledgeAcquisition: Confidence score: 0.5
2025-02-09 14:36:07.774 | 40212:55156 | INFO     | __main__:_synthesize_knowledge:325 | Knowledge Synthesis: Processing source: CHECK DOMAIN OVERVIEW - SmallSEOTools.com (source_17.txt)
2025-02-09 14:36:07.776 | 40212:55156 | INFO     | __main__:_synthesize_knowledge:329 | Knowledge Synthesis: Content preview:
![Image of website logo( Login( * ![PRO Pricing( * Plagiarism Checker( * Free Grammar Checker( * Reverse Image * [Paraphrasing Tool( * Login( × !image of languages( EN English - EN( русский - RU( 日本語 - JA( Italiano - IT( Français - FR( Português - PT( Español - ES( Deutsche - DE( 中文 - ZH( !Report Bug( # CHECK DOMAIN OVERVIEW Use website checker to get a domain overview and have a better insight into the online presence of a website. Just enter the domain or URL below and click the big blue "Chec...
2025-02-09 14:36:07.779 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:445 | KnowledgeAcquisition: Starting source processing with content length: 7208
2025-02-09 14:36:07.782 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:449 | KnowledgeAcquisition: Content preview:
![Image of website logo( Login( * ![PRO Pricing( * Plagiarism Checker( * Free Grammar Checker( * Reverse Image * [Paraphrasing Tool( * Login( × !image of languages( EN English - EN( русский - RU( 日本語 ...
2025-02-09 14:36:07.784 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:452 | KnowledgeAcquisition: Extracting entities...
2025-02-09 14:36:07.833 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_extract_entities:646 | Failed to extract entities: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 454, in process_source
    entities = await self._extract_entities(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 621, in _extract_entities
    result = await chain.ainvoke({"content": content})  # Note: changed text to content to match prompt

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:08.032 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:459 | KnowledgeAcquisition: Extracted 1 entities: ['general_concept']
2025-02-09 14:36:08.036 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:465 | KnowledgeAcquisition: Extracting relationships...
2025-02-09 14:36:08.083 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_extract_relationships:658 | Failed to extract relationships: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 467, in process_source
    relationships = await self._extract_relationships(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 655, in _extract_relationships
    result = await chain.ainvoke({"content": content})

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:08.193 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:479 | KnowledgeAcquisition: Extracted 0 relationships
2025-02-09 14:36:08.196 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:487 | KnowledgeAcquisition: Generating metadata...
2025-02-09 14:36:08.236 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_generate_metadata:669 | Failed to generate metadata: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 489, in process_source
    metadata = await self._generate_metadata(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 666, in _generate_metadata
    result = await chain.ainvoke({"text": content})

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:08.317 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:500 | KnowledgeAcquisition: Evaluating confidence...
2025-02-09 14:36:08.360 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_evaluate_confidence:734 | Failed to evaluate confidence: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 502, in process_source
    confidence_eval = await self._evaluate_confidence(content, entities, relationships)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 723, in _evaluate_confidence
    result = await chain.ainvoke({

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:08.427 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:510 | KnowledgeAcquisition: Confidence score: 0.5
2025-02-09 14:36:08.436 | 40212:55156 | INFO     | __main__:_synthesize_knowledge:325 | Knowledge Synthesis: Processing source: NIH News in Health | A monthly newsletter from the National ... (source_19.txt)
2025-02-09 14:36:08.439 | 40212:55156 | INFO     | __main__:_synthesize_knowledge:329 | Knowledge Synthesis: Content preview:
Skip to main content ![NIH News in Health A monthly newsletter from the National Institutes of Health, part of the U.S. Department of Health and Human Services ## ## Site * Home ### Beyond Basic Blood Tests The Power of Pets Rough Up Your Diet Caring for Concussions Do Social Ties Affect Our Health?( NIH Office of Communications and Public Liaison Building 31, Room 5B52 Bethesda, MD 20892-2094 nihnewsinhealth@od.nih.gov Tel: 301-451-8224 **Editor:** Harrison Wein, Ph.D. **Managing Editor:** Tian...
2025-02-09 14:36:08.441 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:445 | KnowledgeAcquisition: Starting source processing with content length: 1195
2025-02-09 14:36:08.443 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:449 | KnowledgeAcquisition: Content preview:
Skip to main content ![NIH News in Health A monthly newsletter from the National Institutes of Health, part of the U.S. Department of Health and Human Services ## ## Site * Home ### Beyond Basic Blood...
2025-02-09 14:36:08.444 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:452 | KnowledgeAcquisition: Extracting entities...
2025-02-09 14:36:08.485 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_extract_entities:646 | Failed to extract entities: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 454, in process_source
    entities = await self._extract_entities(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 621, in _extract_entities
    result = await chain.ainvoke({"content": content})  # Note: changed text to content to match prompt

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:08.555 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:459 | KnowledgeAcquisition: Extracted 1 entities: ['general_concept']
2025-02-09 14:36:08.558 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:465 | KnowledgeAcquisition: Extracting relationships...
2025-02-09 14:36:08.598 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_extract_relationships:658 | Failed to extract relationships: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 467, in process_source
    relationships = await self._extract_relationships(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 655, in _extract_relationships
    result = await chain.ainvoke({"content": content})

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:08.664 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:479 | KnowledgeAcquisition: Extracted 0 relationships
2025-02-09 14:36:08.666 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:487 | KnowledgeAcquisition: Generating metadata...
2025-02-09 14:36:08.715 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_generate_metadata:669 | Failed to generate metadata: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 489, in process_source
    metadata = await self._generate_metadata(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 666, in _generate_metadata
    result = await chain.ainvoke({"text": content})

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:08.826 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:500 | KnowledgeAcquisition: Evaluating confidence...
2025-02-09 14:36:08.865 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_evaluate_confidence:734 | Failed to evaluate confidence: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 502, in process_source
    confidence_eval = await self._evaluate_confidence(content, entities, relationships)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 723, in _evaluate_confidence
    result = await chain.ainvoke({

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:09.168 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:510 | KnowledgeAcquisition: Confidence score: 0.5
2025-02-09 14:36:09.174 | 40212:55156 | INFO     | __main__:_synthesize_knowledge:325 | Knowledge Synthesis: Processing source: Domain Rating Checker 【Free tool, No Login, Super Fast】 (source_3.txt)
2025-02-09 14:36:09.176 | 40212:55156 | INFO     | __main__:_synthesize_knowledge:329 | Knowledge Synthesis: Content preview:
![AI Writer for SEO? Domain Rating (DR) is a metric developed to estimate the relative strength of a website's backlink profile compared to all other sites on the internet on a scale from 0 to 100. The higher the DR score, the stronger and more authoritative the website is considered to be. This metric is crucial for understanding how likely a website is to rank in The calculation of DR takes into account the quantity and quality of external backlinks, denoting websites that have robust backlink...
2025-02-09 14:36:09.178 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:445 | KnowledgeAcquisition: Starting source processing with content length: 4993
2025-02-09 14:36:09.180 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:449 | KnowledgeAcquisition: Content preview:
![AI Writer for SEO? Domain Rating (DR) is a metric developed to estimate the relative strength of a website's backlink profile compared to all other sites on the internet on a scale from 0 to 100. Th...
2025-02-09 14:36:09.181 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:452 | KnowledgeAcquisition: Extracting entities...
2025-02-09 14:36:09.216 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_extract_entities:646 | Failed to extract entities: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 454, in process_source
    entities = await self._extract_entities(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 621, in _extract_entities
    result = await chain.ainvoke({"content": content})  # Note: changed text to content to match prompt

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:09.279 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:459 | KnowledgeAcquisition: Extracted 1 entities: ['general_concept']
2025-02-09 14:36:09.281 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:465 | KnowledgeAcquisition: Extracting relationships...
2025-02-09 14:36:09.397 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_extract_relationships:658 | Failed to extract relationships: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 467, in process_source
    relationships = await self._extract_relationships(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 655, in _extract_relationships
    result = await chain.ainvoke({"content": content})

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:09.458 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:479 | KnowledgeAcquisition: Extracted 0 relationships
2025-02-09 14:36:09.460 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:487 | KnowledgeAcquisition: Generating metadata...
2025-02-09 14:36:09.501 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_generate_metadata:669 | Failed to generate metadata: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 489, in process_source
    metadata = await self._generate_metadata(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 666, in _generate_metadata
    result = await chain.ainvoke({"text": content})

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:09.562 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:500 | KnowledgeAcquisition: Evaluating confidence...
2025-02-09 14:36:09.600 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_evaluate_confidence:734 | Failed to evaluate confidence: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 502, in process_source
    confidence_eval = await self._evaluate_confidence(content, entities, relationships)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 723, in _evaluate_confidence
    result = await chain.ainvoke({

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:09.667 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:510 | KnowledgeAcquisition: Confidence score: 0.5
2025-02-09 14:36:09.678 | 40212:55156 | INFO     | __main__:_synthesize_knowledge:325 | Knowledge Synthesis: Processing source: Free Website Authority Checker (& How to Improve Yours) (source_5.txt)
2025-02-09 14:36:09.680 | 40212:55156 | INFO     | __main__:_synthesize_knowledge:329 | Knowledge Synthesis: Content preview:
!grid-line !( Keri Engel January 10, 2025 Our free website authority checker lets you check domain authority for any website on the internet. To get your analysis, just enter a domain name and hit enter. The website authority report is split into six sections. First, you’ll see an overview of domain metrics, like your authority score. This indicates the level of trust that !undefined:** Combines factors like link quality, organic traffic, and spam presence to create an accurate measure, aiming t...
2025-02-09 14:36:09.682 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:445 | KnowledgeAcquisition: Starting source processing with content length: 1060
2025-02-09 14:36:09.685 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:449 | KnowledgeAcquisition: Content preview:
!grid-line !( Keri Engel January 10, 2025 Our free website authority checker lets you check domain authority for any website on the internet. To get your analysis, just enter a domain name and hit ent...
2025-02-09 14:36:09.687 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:452 | KnowledgeAcquisition: Extracting entities...
2025-02-09 14:36:09.728 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_extract_entities:646 | Failed to extract entities: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 454, in process_source
    entities = await self._extract_entities(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 621, in _extract_entities
    result = await chain.ainvoke({"content": content})  # Note: changed text to content to match prompt

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:09.831 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:459 | KnowledgeAcquisition: Extracted 1 entities: ['general_concept']
2025-02-09 14:36:09.832 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:465 | KnowledgeAcquisition: Extracting relationships...
2025-02-09 14:36:09.876 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_extract_relationships:658 | Failed to extract relationships: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 467, in process_source
    relationships = await self._extract_relationships(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 655, in _extract_relationships
    result = await chain.ainvoke({"content": content})

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:09.942 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:479 | KnowledgeAcquisition: Extracted 0 relationships
2025-02-09 14:36:09.944 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:487 | KnowledgeAcquisition: Generating metadata...
2025-02-09 14:36:09.982 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_generate_metadata:669 | Failed to generate metadata: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 489, in process_source
    metadata = await self._generate_metadata(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 666, in _generate_metadata
    result = await chain.ainvoke({"text": content})

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:10.041 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:500 | KnowledgeAcquisition: Evaluating confidence...
2025-02-09 14:36:10.094 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_evaluate_confidence:734 | Failed to evaluate confidence: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 502, in process_source
    confidence_eval = await self._evaluate_confidence(content, entities, relationships)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 723, in _evaluate_confidence
    result = await chain.ainvoke({

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:10.272 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:510 | KnowledgeAcquisition: Confidence score: 0.5
2025-02-09 14:36:10.280 | 40212:55156 | INFO     | __main__:_synthesize_knowledge:325 | Knowledge Synthesis: Processing source: Get a Test Domain using Unstoppable Website Faucet Guide (source_7.txt)
2025-02-09 14:36:10.281 | 40212:55156 | INFO     | __main__:_synthesize_knowledge:329 | Knowledge Synthesis: Content preview:
![UD Developer Docs Logo are not supported. ## Get a free domain from Unstoppable Website * Go to the Unstoppable WebsiteNext to **Polygon Faucet Guide**( * Terms of Use( * Privacy Notice( Community * Twitter( * Facebook( Resources * Medium( * Podcast( * Youtube( * Github( Copyright © 2024 Unstoppable Domains Inc. All rights reserved....
2025-02-09 14:36:10.283 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:445 | KnowledgeAcquisition: Starting source processing with content length: 336
2025-02-09 14:36:10.285 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:449 | KnowledgeAcquisition: Content preview:
![UD Developer Docs Logo are not supported. ## Get a free domain from Unstoppable Website * Go to the Unstoppable WebsiteNext to **Polygon Faucet Guide**( * Terms of Use( * Privacy Notice( Community *...
2025-02-09 14:36:10.287 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:452 | KnowledgeAcquisition: Extracting entities...
2025-02-09 14:36:10.328 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_extract_entities:646 | Failed to extract entities: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 454, in process_source
    entities = await self._extract_entities(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 621, in _extract_entities
    result = await chain.ainvoke({"content": content})  # Note: changed text to content to match prompt

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:10.397 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:459 | KnowledgeAcquisition: Extracted 1 entities: ['general_concept']
2025-02-09 14:36:10.400 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:465 | KnowledgeAcquisition: Extracting relationships...
2025-02-09 14:36:10.437 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_extract_relationships:658 | Failed to extract relationships: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 467, in process_source
    relationships = await self._extract_relationships(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 655, in _extract_relationships
    result = await chain.ainvoke({"content": content})

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:10.526 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:479 | KnowledgeAcquisition: Extracted 0 relationships
2025-02-09 14:36:10.528 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:487 | KnowledgeAcquisition: Generating metadata...
2025-02-09 14:36:10.564 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_generate_metadata:669 | Failed to generate metadata: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 489, in process_source
    metadata = await self._generate_metadata(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 666, in _generate_metadata
    result = await chain.ainvoke({"text": content})

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:10.667 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:500 | KnowledgeAcquisition: Evaluating confidence...
2025-02-09 14:36:10.717 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_evaluate_confidence:734 | Failed to evaluate confidence: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 502, in process_source
    confidence_eval = await self._evaluate_confidence(content, entities, relationships)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 723, in _evaluate_confidence
    result = await chain.ainvoke({

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:10.781 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:510 | KnowledgeAcquisition: Confidence score: 0.5
2025-02-09 14:36:10.790 | 40212:55156 | INFO     | __main__:_synthesize_knowledge:325 | Knowledge Synthesis: Processing source: Check Domain Authority Score【No Login, Super Fast, FREE】 (source_9.txt)
2025-02-09 14:36:10.792 | 40212:55156 | INFO     | __main__:_synthesize_knowledge:329 | Knowledge Synthesis: Content preview:
![AI Writer for SEO Domain Authority (DA) is a metric that predicts how well a website is likely to rank on DA is determined by analyzing multiple factors, including the number of linking root domains and the total count of links, culminating in a single DA score. This score is commonly used for comparing the ranking potential of different websites or monitoring a website's strength over time. It's important to understand that Domain Authority is not utilized by Google in its ## Examples of doma...
2025-02-09 14:36:10.794 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:445 | KnowledgeAcquisition: Starting source processing with content length: 5785
2025-02-09 14:36:10.796 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:449 | KnowledgeAcquisition: Content preview:
![AI Writer for SEO Domain Authority (DA) is a metric that predicts how well a website is likely to rank on DA is determined by analyzing multiple factors, including the number of linking root domains...
2025-02-09 14:36:10.798 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:452 | KnowledgeAcquisition: Extracting entities...
2025-02-09 14:36:10.844 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_extract_entities:646 | Failed to extract entities: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 454, in process_source
    entities = await self._extract_entities(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 621, in _extract_entities
    result = await chain.ainvoke({"content": content})  # Note: changed text to content to match prompt

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:10.905 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:459 | KnowledgeAcquisition: Extracted 1 entities: ['general_concept']
2025-02-09 14:36:10.907 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:465 | KnowledgeAcquisition: Extracting relationships...
2025-02-09 14:36:10.949 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_extract_relationships:658 | Failed to extract relationships: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 467, in process_source
    relationships = await self._extract_relationships(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 655, in _extract_relationships
    result = await chain.ainvoke({"content": content})

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:11.019 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:479 | KnowledgeAcquisition: Extracted 0 relationships
2025-02-09 14:36:11.021 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:487 | KnowledgeAcquisition: Generating metadata...
2025-02-09 14:36:11.059 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_generate_metadata:669 | Failed to generate metadata: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 489, in process_source
    metadata = await self._generate_metadata(content)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 666, in _generate_metadata
    result = await chain.ainvoke({"text": content})

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:11.124 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:500 | KnowledgeAcquisition: Evaluating confidence...
2025-02-09 14:36:11.165 | 40212:55156 | ERROR    | scripts.knowledge_acquisition:_evaluate_confidence:734 | Failed to evaluate confidence: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 342, in _agenerate
    response = await self._client.generate_content_async(

  File "C:\Python313\Lib\site-packages\google\generativeai\generative_models.py", line 385, in generate_content_async
    response = await self._async_client.generate_content(
  File "C:\Python313\Lib\site-packages\google\ai\generativelanguage_v1beta\services\generative_service\async_client.py", line 440, in generate_content
    response = await rpc(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 230, in retry_wrapped_func
    return await retry_target(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 160, in retry_target
    _retry_error_helper(
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_base.py", line 212, in _retry_error_helper
    raise final_exc from source_exc
  File "C:\Python313\Lib\site-packages\google\api_core\retry\retry_unary_async.py", line 155, in retry_target
    return await target()
  File "C:\Python313\Lib\site-packages\google\api_core\grpc_helpers_async.py", line 88, in __await__
    raise exceptions.from_grpc_error(rpc_error) from rpc_error

google.api_core.exceptions.InvalidArgument: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type



During handling of the above exception, another exception occurred:


Traceback (most recent call last):

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 868, in <module>
    asyncio.run(main())

  File "C:\Python313\Lib\asyncio\runners.py", line 194, in run
    return runner.run(main)
  File "C:\Python313\Lib\asyncio\runners.py", line 118, in run
    return self._loop.run_until_complete(task)
  File "C:\Python313\Lib\asyncio\base_events.py", line 707, in run_until_complete
    self.run_forever()
  File "C:\Python313\Lib\asyncio\base_events.py", line 678, in run_forever
    self._run_once()
  File "C:\Python313\Lib\asyncio\base_events.py", line 2033, in _run_once
    handle._run()
  File "C:\Python313\Lib\asyncio\events.py", line 89, in _run
    self._context.run(self._callback, *self._args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 857, in main
    await agent.run()

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 691, in run
    result = await getattr(self, task.tool)(**task.args)

  File "C:\Users\mikeb\work\sifu2\run_agents.py", line 344, in _synthesize_knowledge
    knowledge = await self.knowledge_system.process_source(content)

  File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 502, in process_source
    confidence_eval = await self._evaluate_confidence(content, entities, relationships)

> File "C:\Users\mikeb\work\sifu2\scripts\knowledge_acquisition.py", line 723, in _evaluate_confidence
    result = await chain.ainvoke({

  File "C:\Python313\Lib\site-packages\langchain_core\runnables\base.py", line 3058, in ainvoke
    input = await asyncio.create_task(part(), context=context)  # type: ignore
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 305, in ainvoke
    llm_result = await self.agenerate_prompt(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 870, in agenerate_prompt
    return await self.agenerate(
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 830, in agenerate
    raise exceptions[0]
  File "C:\Python313\Lib\site-packages\langchain_core\language_models\chat_models.py", line 998, in _agenerate_with_cache
    result = await self._agenerate(

  File "C:\Users\mikeb\work\sifu2\scripts\chat_gemini.py", line 366, in _agenerate
    raise ValueError(f"Failed to generate response: {str(e)}")

ValueError: Failed to generate response: 400 * GenerateContentRequest.generation_config.response_schema.properties: only allowed for OBJECT type

2025-02-09 14:36:11.228 | 40212:55156 | INFO     | scripts.knowledge_acquisition:process_source:510 | KnowledgeAcquisition: Confidence score: 0.5
2025-02-09 14:36:11.241 | 40212:55156 | INFO     | __main__:run:657 | Execution: Executing task 2: _generate_examples
2025-02-09 14:36:11.244 | 40212:55156 | INFO     | __main__:run:678 | Execution: Found 10 knowledge entries for example generation
2025-02-09 14:37:09.792 | 40212:55156 | INFO     | __main__:run:657 | Execution: Executing task 3: _train_model
2025-02-09 14:37:09.793 | 40212:55156 | INFO     | __main__:run:688 | Execution: Found 102 examples for training
2025-02-09 14:37:09.797 | 40212:55156 | INFO     | __main__:run:722 | Decision: Making join decision
2025-02-09 14:37:09.799 | 40212:55156 | INFO     | scripts.llm_compiler:make_join_decision:414 | Decision: Making join decision
2025-02-09 14:37:11.347 | 40212:55156 | INFO     | __main__:run:733 | Compiler: Generating final result
2025-02-09 14:37:11.349 | 40212:55156 | INFO     | scripts.llm_compiler:_generate_final_result:562 | Compiler: Generating final result
2025-02-09 14:37:11.351 | 40212:55156 | INFO     | scripts.llm_compiler:_generate_final_result:572 | Compiler: Generated final result
2025-02-09 14:37:11.353 | 40212:55156 | INFO     | __main__:run:737 | Research: Research workflow completed successfully
